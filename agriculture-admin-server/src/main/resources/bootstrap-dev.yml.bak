--- #################### 数据库相关配置 ####################
spring:
  cloud:
    # Spring Cloud Stream 配置项，对应 BindingServiceProperties 类
    stream:
      function:
        definition: smsSendConsumer;
      # Binding 配置项，对应 BindingProperties Map
      bindings:
        smsSend-out-0:
          destination: system_sms_send
        smsSendConsumer-in-0:
          destination: system_sms_send
          group: system_sms_send_consumer_group
      # Spring Cloud Stream RocketMQ 配置项
      rocketmq:
        # RocketMQ Binder 配置项，对应 RocketMQBinderConfigurationProperties 类
        binder:
          name-server: xx.xx.xx.xx:9876 # RocketMQ Namesrv 地址
        default: # 默认 bindings 全局配置
          producer: # RocketMQ Producer 配置项，对应 RocketMQProducerProperties 类
            group: system_producer_group # 生产者分组
            send-type: SYNC # 发送模式，SYNC 同步

    # Spring Cloud Bus 配置项，对应 BusProperties 类
    bus:
      enabled: false # 是否开启，默认为 true
      id: ${spring.application.name}:${server.port} # 编号，Spring Cloud Alibaba 建议使用“应用:端口”的格式
      destination: springCloudBus # 目标消息队列，默认为 springCloudBus
  # 数据源配置项
  autoconfigure:
    exclude:
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure # 排除 Druid 的自动配置，使用 dynamic-datasource-spring-boot-starter 配置多数据源
  datasource:
    druid: # Druid 【监控】相关的全局配置
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        allow: # 设置白名单，不填则允许所有访问
        url-pattern: /druid/*
        login-username: # 控制台管理用户名和密码
        login-password:
      filter:
        stat:
          enabled: true
          log-slow-sql: true # 慢 SQL 记录
          slow-sql-millis: 100
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    dynamic: # 多数据源配置
      druid: # Druid 【连接池】相关的全局配置
        initial-size: 5 # 初始连接数
        min-idle: 10 # 最小连接池数量
        max-active: 20 # 最大连接池数量
        max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒
        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒
        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒
        validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
      primary: master
      datasource:
        master:
          name: agriculture-cloud-open
          url: jdbc:mysql://xx.xx.xx.xx:xxxx/${spring.datasource.dynamic.datasource.master.name}?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8 # MySQL Connector/J 5.X 连接的示例
          username: xxx
          password: xxx
        slave: # 模拟从库，可根据自己需要修改
          name: agriculture-cloud-open
          url: jdbc:mysql://xx.xx.xx.xx:xxxx/${spring.datasource.dynamic.datasource.master.name}?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8 # MySQL Connector/J 5.X 连接的示例
          username: xxx
          password: xxx

  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  redis:
    host: xx.xx.xx.xx # 地址
    port: 16379 # 端口
    database: 3 # 数据库索引
    password: xxx # 密码，建议生产环境开启

--- #################### MQ 消息队列相关配置 ####################
spring:
  cloud:
    stream:
      rocketmq:
        # RocketMQ Binder 配置项，对应 RocketMQBinderConfigurationProperties 类
        binder:
          name-server: xx.xx.xx.xx:xx # RocketMQ Namesrv 地址

--- #################### 服务保障相关配置 ####################

# Lock4j 配置项
lock4j:
  acquire-timeout: 3000 # 获取分布式锁超时时间，默认为 3000 毫秒
  expire: 30000 # 分布式锁的超时时间，默认为 30 毫秒

--- #################### 监控相关配置 ####################

# Actuator 监控端点的配置项
management:
  endpoints:
    web:
      base-path: /actuator # Actuator 提供的 API 接口的根目录。默认为 /actuator
      exposure:
        include: '*' # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。

# Spring Boot Admin 配置项
spring:
  boot:
    admin:
      # Spring Boot Admin Client 客户端的相关配置
      client:
        url: http://127.0.0.1:${server.port}/${spring.boot.admin.context-path} # 设置 Spring Boot Admin Server 地址
        instance:
          prefer-ip: true # 注册实例时，优先使用 IP

# 日志文件配置
logging:
  level:
    # 配置自己写的 MyBatis Mapper 打印日志
    com.airohit.agriculture.module.content.dal.mysql: debug

--- #################### 微信公众号相关配置 ####################
wx: # 参见 https://github.com/Wechat-Group/WxJava/blob/develop/spring-boot-starters/wx-java-mp-spring-boot-starter/README.md 文档
  mp:
    # 公众号配置(必填)
    app-id: xxx
    secret: xxx
    # 存储配置，解决 AccessToken 的跨节点的共享
    config-storage:
      type: RedisTemplate # 采用 RedisTemplate 操作 Redis，会自动从 Spring 中获取
      key-prefix: wx # Redis Key 的前缀 TODO 芋艿：解决下 Redis key 管理的配置
      http-client-type: HttpClient # 采用 HttpClient 请求微信公众号平台

--- #################### 相关配置 ####################
device-ssh:
  service-ip: xxx
  service-username: xxx
  service-password: xxx
# 配置项，设置当前项目所有自定义的配置
agriculture:
  env: # 多环境的配置项
    tag: ${HOSTNAME}
  security:
    mock-enable: true
  xss:
    enable: false
    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系
      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求
      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求
  access-log: # 访问日志的配置项
    enable: false
  captcha:
    enable: true # 验证码的开关，默认为 true；
  codegen:
    base-package: com.airohit.agriculture
    db-schemas: ${spring.datasource.dynamic.datasource.master.name}
  error-code: # 错误码相关配置项
    constants-class-list:
      - com.airohit.agriculture.module.content.enums.ErrorCodeConstants
  demo: false # 关闭演示模式

  info:
    version: 1.0.0
    base-package: com.airohit.agriculture.module.content
  web:
    admin-ui:
      url: http://dashboard.airohit.cn # Admin 管理后台 UI 的地址
  swagger:
    title: 管理后台
    description: 提供管理员管理的所有功能
    version: ${agriculture.info.version}
    base-package: ${agriculture.info.base-package}

  tenant: # 多租户相关配置项
    enable: true
    ignore-urls:
      - /system/tenant/get-id-by-name # 基于名字获取租户，不许带租户编号
      - /system/captcha/get-image # 获取图片验证码，和租户无关
      - /system/captcha/get # 获取图片验证码，和租户无关
      - /system/captcha/check # 校验图片验证码，和租户无关
      - /system/auth/login
      - /system/sms/callback/* # 短信回调接口，无法带上租户编号
      - /rpc-api/system/tenant/valid # 防止递归。避免调用 /rpc-api/system/tenant/valid 接口时，又去触发 /rpc-api/system/tenant/valid 去校验
      - /rpc-api/system/tenant/id-list # 获得租户列表的时候，无需传递租户编号
      - /rpc-api/system/error-code/* # 错误码的自动创建与下载的接口，无法带上租户编号
      - /rpc-api/system/oauth2/token/check # 访问令牌校验时，无需传递租户编号；主要解决上传文件的场景，前端不会传递 tenant-id！
      - /app-api/content/**
      - /content/**

    ignore-tables:
      - system_tenant
      - system_tenant_package
      - system_dict_data
      - system_dict_type
      - system_error_code
      - system_menu
      - system_sms_channel
      - system_sms_template
      - system_sms_log
      - system_sensitive_word
      - system_oauth2_client
    farm:
      ignore-system-tenant-tables:
      ignore-urls:
        - /system/tenant/get-id-by-name # 基于名字获取租户，不许带租户编号
        - /system/captcha/get-image # 获取图片验证码，和租户无关
        - /system/captcha/get # 获取图片验证码，和租户无关
        - /system/captcha/check # 校验图片验证码，和租户无关
        - /system/sms/callback/* # 短信回调接口，无法带上租户编号
        - /system/sms/callback/* # 短信回调接口，无法带上租户编号
        - /system/chat/** # 短信回调接口，无法带上租户编号
        - /rpc-api/system/tenant/valid # 防止递归。避免调用 /rpc-api/system/tenant/valid 接口时，又去触发 /rpc-api/system/tenant/valid 去校验
        - /rpc-api/system/tenant/id-list # 获得租户列表的时候，无需传递租户编号
        - /app-api/system/app/auth/sms-login
        - /app-api/system/app/auth/* # 手机端授权相关接口
        - /app-api/system/app/profile/update-password-notLogin # 手机端授权相关接口
        - /rpc-api/system/error-code/* # 错误码的自动创建与下载的接口，无法带上租户编号
        - /rpc-api/system/oauth2/token/check # 访问令牌校验时，无需传递租户编号；主要解决上传文件的场景，前端不会传递 tenant-id！
        - /rpc-api/land/slave/land/get
        - /system/weixin/getJsapiSignature
        - /statistics/getFarmStatisticVo
        - /system/farm/farmList
        - /rpc-api/system/slave/**
        - /system/auth/login
        - /rpc-api/land/slave/**
        - /rpc-api/plant/slave/**
        - /rpc-api/device/slave/**
        - /rpc-api/plant/slave/**
        - /rpc-api/plant/plan/**
        - /rpc-api/plan/plan-type-data/**
      ignore-tables:
        - system_dept
        - system_dict_data
        - system_dict_type
        - system_error_code
        - system_login_log
        - system_menu
        - system_notice
        - system_oauth2_access_token
        - system_oauth2_approve
        - system_oauth2_client
        - system_oauth2_code
        - system_oauth2_refresh_token
        - system_operate_log
        - system_post
        - system_role
        - system_role_menu
        - system_sensitive_word
        - system_sms_channel
        - system_sms_code
        - system_sms_log
        - system_sms_template
        - diseases_prevention
        - system_social_user
        - system_social_user_bind
        - system_tenant
        - system_tenant_package
        - system_user_post
        - system_user_role
        - system_user_session
        - system_users
        - system_users_examine
        - province
        - city
        - area
        - street
        - infra_api_access_log
        - infra_api_error_log
        - infra_codegen_column
        - infra_codegen_table
        - infra_config
        - infra_data_source_config
        - infra_file
        - infra_file_config
        - infra_file_content
        - infra_job
        - infra_job_log
        - infra_test_demo
        - pay_app
        - pay_channel
        - pay_merchant
        - pay_notify_log
        - pay_notify_task
        - pay_order
        - pay_order_extension
        - pay_refund
        - farm_tenant
        - farm
        - agro_task_filed
        - soil_device_data
        - weather_device_data
  sms-code: # 短信验证码相关的配置项
    expire-times: 10m
    send-frequency: 1m
    send-maximum-quantity-per-day: 10
    begin-code: 9999 # 这里配置 9999 的原因是，测试方便。
    end-code: 9999 # 这里配置 9999 的原因是，测试方便。
--- #################### MQ 消息队列相关配置 ####################

aj:
  captcha:
    jigsaw: classpath:images/jigsaw # 滑动验证，底图路径，不配置将使用默认图片；以 classpath: 开头，取 resource 目录下路径
    pic-click: classpath:images/pic-click # 滑动验证，底图路径，不配置将使用默认图片；以 classpath: 开头，取 resource 目录下路径
    cache-type: redis # 缓存 local/redis...
    cache-number: 1000 # local 缓存的阈值,达到这个值，清除缓存
    timing-clear: 180 # local定时清除过期缓存(单位秒),设置为0代表不执行
    type: blockPuzzle # 验证码类型 default两种都实例化。 blockPuzzle 滑块拼图 clickWord 文字点选
    interference-options: 0 # 滑动干扰项(0/1/2)
    water-mark:
    req-frequency-limit-enable: false # 接口请求次数一分钟限制是否开启 true|false
    req-get-lock-limit: 5 # 验证失败5次，get接口锁定
    req-get-lock-seconds: 10 # 验证失败后，锁定时间间隔
    req-get-minute-limit: 30 # get 接口一分钟内请求数限制
    req-check-minute-limit: 60 # check 接口一分钟内请求数限制
    req-verify-minute-limit: 60 # verify 接口一分钟内请求数限制

debug: false

--- #################### 天气接口配置(象辑天气) ####################
weather:
  # 天气秘钥
  key: &key=xxx
  # 当日天气
  today:
    url_15: http://gfapi.mlogcn.com/weather/v001/day?days=1&lonlat=
    url_240: http://gfapi.mlogcn.com/high_res/v001/gridhour?lonlat=
    hour: &hours=1
  # 气象灾害
  damage:
    damage_url: http://gfapi.mlogcn.com/weather/v001/alarm?
  # 24小时预报
  day24:
    url_24: http://gfapi.mlogcn.com/high_res/v001/gridhour?lonlat=
    hour_24: &hours=24
  # 近10天 天气预报
  future:
    url_future: http://gfapi.mlogcn.com/weather/v001/day?days=10&lonlat=
  # 1X1 公里网格
  grid:
    grid_url: http://gfapi.mlogcn.com/high_res/v001/gridnow?lonlat=
  # 雷达图
  radar:
    radar_url: http://gfapi.mlogcn.com/high_res/v001/regionradar?minLonlat=73,12.15&maxLonlat=135.5,54.2&imgType=fc
  # 分钟级降水
  rain:
    url_rain: http://gfapi.mlogcn.com/high_res/v001/nowcasting?lonlat=
    url_hour: http://gfapi.mlogcn.com/high_res/v001/gridhour?lonlat=
    url_rain_hour: &hour=1