<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airohit.agriculture.module.system.dal.mysql.message.SystemWarningMessageMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
     -->


    <select id="getWarningMessageRespVOPage"
            resultType="com.airohit.agriculture.module.system.entity.app.message.WarningMessageRespVO">
        select warning_message.id as id,
        warning_message.warning_type as warningType,
        warning_message.warning_message as warningMessage,
        warning_message.create_time as createTime,
        warning_message.remark as remark,
        warning_message.overall_situation as overallSituation,
        warning_message.user_id as userId,
        (case
        when message_read.user_id is null then 0
        else 1
        END) as messageStatus
        from warning_message
        left join message_read on warning_message.id = message_read.message_id
        where (warning_message.overall_situation = 1
        or warning_message.user_id = #{pageVO.userId,jdbcType=BIGINT})
        and warning_message.tenant_id = #{pageVO.tenantId,jdbcType=BIGINT}
        <if test="pageVO.warningType != null">
            and warning_message.warning_type= #{pageVO.warningType,jdbcType=INTEGER}
        </if>
        order by warning_message.create_time desc
    </select>

    <select id="getWarningMessageRespVO"
            resultType="com.airohit.agriculture.module.system.entity.app.message.WarningMessageRespVO">
        select warning_message.id                as id,
               warning_message.warning_type      as warningType,
               warning_message.warning_message   as warningMessage,
               warning_message.create_time       as createTime,
               warning_message.remark            as remark,
               warning_message.overall_situation as overallSituation,
               warning_message.user_id           as userId,
               (case
                    when message_read.user_id is null then 0
                    else 1
                   END)                          as messageStatus
        from warning_message
                 left join message_read on warning_message.id = message_read.message_id
        where warning_message.id = #{id,jdbcType=INTEGER}
        order by warning_message.create_time desc
    </select>

    <select id="getMessageCount" resultType="java.lang.Integer">
        <if test="messageStatus == 1">
            select count(*)
            from message_read
            where message_read.user_id = #{userId,jdbcType=BIGINT};
        </if>
        <if test="messageStatus == 0">
            select (select count(*)
            from warning_message
            where (warning_message.overall_situation = 1
            or warning_message.user_id = #{userId,jdbcType=BIGINT})
            and warning_message.tenant_id = #{tenantId,jdbcType=BIGINT}) -
            (select count(*) from message_read where message_read.user_id = #{userId,jdbcType=BIGINT});
        </if>
    </select>
</mapper>
